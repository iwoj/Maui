// =============================================================================// com.bitmovers.utilities.StringParser// =============================================================================package com.bitmovers.utilities;import java.io.*;import java.util.Hashtable;import java.util.StringTokenizer;// =============================================================================// CLASS: StringParser// =============================================================================public class StringParser implements Serializable{  // ---------------------------------------------------------------------------    private static final String TAG_DIVIDER  = "^^";  private Hashtable variableHash;  // ---------------------------------------------------------------------------  // METHOD: StringParser  // ---------------------------------------------------------------------------    public StringParser()  {    this.variableHash = new Hashtable();  }  // ---------------------------------------------------------------------------  // METHOD: StringParser  // ---------------------------------------------------------------------------    public StringParser(Hashtable variableHash)  {    this.variableHash = variableHash;  }  // ---------------------------------------------------------------------------  // METHOD: parseString()  // ---------------------------------------------------------------------------  public String parseString(String source)  {    StringBuffer returnString = new StringBuffer();    StringTokenizer tokens = new StringTokenizer(source, TAG_DIVIDER);        {      boolean variableText = false;      while (tokens.hasMoreTokens())      {        if (!variableText)        {          returnString.append(tokens.nextToken());          variableText = true;        }        else // (variableText)        {          String variableName = tokens.nextToken();          try          {            returnString.append(variableHash.get(variableName).toString());          }          catch (NullPointerException e)          {            //returnString += "<!-- " + variableName + " is an unknown variable. -->";            //returnString.append("");          }                    variableText = false;        }      }    }        return returnString.toString();  }      // ---------------------------------------------------------------------------  // METHOD: setVariable()  // ---------------------------------------------------------------------------    public void setVariable( String name, String value )  {    variableHash.put(name, value);  }  // ---------------------------------------------------------------------------}// =============================================================================// Copyright 1999 Butmovers Communications, Inc.                             eof